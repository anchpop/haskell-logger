name: unagi-chan
version: 0.4.1.0
id: unagi-chan-0.4.1.0-653lY2sppRRE7BSuSlVsrv
key: unagi-chan-0.4.1.0-653lY2sppRRE7BSuSlVsrv
license: BSD-3-Clause
maintainer: brandon.m.simmons@gmail.com
author: Brandon Simmons
synopsis: Fast concurrent queues with a Chan-like API, and more
description:
    This library provides implementations of concurrent FIFO queues (for both
    general boxed and primitive unboxed values) that are fast, perform well
    under contention, and offer a Chan-like interface. The library may be of
    limited usefulness outside of x86 architectures where the fetch-and-add
    instruction is not available.
    .
    We export several variations of our design; some support additional
    functionality while others try for lower latency by removing features or
    making them more restrictive (e.g. in the @Unboxed@ variants).
    .
    - @Unagi@: a general-purpose near drop-in replacement for @Chan@.
    .
    - @Unagi.Unboxed@: like @Unagi@ but specialized for primitive types; this
    may perform better if a queue grows very large.
    .
    - @Unagi.Bounded@: a bounded variant with blocking and non-blocking writes,
    and other functionality where a notion of the queue's capacity is
    required.
    .
    - @Unagi.NoBlocking@: lowest latency implementations for when blocking
    reads aren't required.
    .
    - @Unagi.NoBlocking.Unboxed@: like @Unagi.NoBlocking@ but for primitive
    types.
    .
    Some of these may be deprecated in the future if they are found to provide
    little performance benefit, or no unique features; you should benchmark and
    experiment with them for your use cases, and please submit pull requests
    for additions to the benchmark suite that reflect what you find.
    .
    Here is an example benchmark measuring the time taken to concurrently write
    and read 100,000 messages, with work divided amongst increasing number of
    readers and writers, comparing against the top-performing queues in the
    standard libraries. The inset graph shows a zoomed-in view on the
    implementations here.
    .
    <<http://i.imgur.com/J5rLUFn.png>>
    .
category: Concurrency
abi: 8653eb7118aaef1b87542a86bc40f35e
exposed: True
exposed-modules:
    Control.Concurrent.Chan.Unagi Control.Concurrent.Chan.Unagi.Bounded
    Control.Concurrent.Chan.Unagi.NoBlocking
    Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed
    Control.Concurrent.Chan.Unagi.Unboxed
hidden-modules: Control.Concurrent.Chan.Unagi.Internal
                Control.Concurrent.Chan.Unagi.Unboxed.Internal
                Control.Concurrent.Chan.Unagi.Bounded.Internal
                Control.Concurrent.Chan.Unagi.NoBlocking.Internal
                Control.Concurrent.Chan.Unagi.NoBlocking.Types
                Control.Concurrent.Chan.Unagi.NoBlocking.Unboxed.Internal
                Control.Concurrent.Chan.Unagi.Constants Utilities
                Data.Atomics.Counter.Fat
import-dirs: C:\Users\hyper\dev\playground\haskell-logger\.stack-work\install\81feb281\lib\x86_64-windows-ghc-8.4.3\unagi-chan-0.4.1.0-653lY2sppRRE7BSuSlVsrv
library-dirs: C:\Users\hyper\dev\playground\haskell-logger\.stack-work\install\81feb281\lib\x86_64-windows-ghc-8.4.3\unagi-chan-0.4.1.0-653lY2sppRRE7BSuSlVsrv
              C:\Users\hyper\AppData\Local\Programs\stack\x86_64-windows\msys2-20180531\mingw64\bin
              C:\Users\hyper\AppData\Local\Programs\stack\x86_64-windows\msys2-20180531\mingw64\lib
              C:\VulkanSDK\1.1.82.1\Lib
dynamic-library-dirs: C:\Users\hyper\dev\playground\haskell-logger\.stack-work\install\81feb281\lib\x86_64-windows-ghc-8.4.3
                      C:\Users\hyper\AppData\Local\Programs\stack\x86_64-windows\msys2-20180531\mingw64\bin
                      C:\Users\hyper\AppData\Local\Programs\stack\x86_64-windows\msys2-20180531\mingw64\lib
                      C:\VulkanSDK\1.1.82.1\Lib
data-dir: C:\Users\hyper\dev\playground\haskell-logger\.stack-work\install\81feb281\share\x86_64-windows-ghc-8.4.3\unagi-chan-0.4.1.0
hs-libraries: HSunagi-chan-0.4.1.0-653lY2sppRRE7BSuSlVsrv
include-dirs: C:\Users\hyper\AppData\Local\Programs\stack\x86_64-windows\msys2-20180531\mingw64\include
depends:
    base-4.11.1.0 atomic-primops-0.8.2-AEF07W3ZbIiHcm4g3qySfI
    primitive-0.6.3.0-DaZpcxwJp2TGn8ITSgfI4C ghc-prim-0.5.2.0
abi-depends: base-4.11.1.0=6bcc87f26fece7bc3dfd6e23d2246271
             atomic-primops-0.8.2-AEF07W3ZbIiHcm4g3qySfI=2453a27455660f99cf13ff21fb24a1c7
             primitive-0.6.3.0-DaZpcxwJp2TGn8ITSgfI4C=58d5931a104b15228eaee549d498946e
             ghc-prim-0.5.2.0=5db32262580fca8027ea6726002c8f3a
haddock-interfaces: C:\Users\hyper\dev\playground\haskell-logger\.stack-work\install\81feb281\doc\unagi-chan-0.4.1.0\unagi-chan.haddock
haddock-html: C:\Users\hyper\dev\playground\haskell-logger\.stack-work\install\81feb281\doc\unagi-chan-0.4.1.0
